<?php

/**
 * @file
 * Load OnTrack VoIP Scripts.
 */
if(variable_get('ontrackvoip_demo', FALSE)) {
  //Demo functions
  include_once('ontrackvoip_demo.inc');
}
include_once('ontrackvoip.inc');
include_once('ontrackvoip.scripts.inc');
include_once('ontrackvoip_ahah.inc');

/**
 * Implements hook_menu()
 */
function ontrackvoip_menu() {
  $items['admin/config/ontrackvoip'] = array(
    'title' => 'OnTrack VoIP',
    'description' => 'OnTrack VoIP settings',
    'page callback' => 'ontrackvoip_admin_menu_block_page',
    'access arguments' => array('administer ontrackvoip configuration'),
  );

  $items['admin/config/ontrackvoip/ontrackvoip'] = array(
    'title' => 'OnTrack VoIP',
    'description' => 'OnTrack VoIP settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ontrackvoip_admin_settings_form'),
    'access arguments' => array('administer ontrackvoip configuration'),
    'type' => MENU_NORMAL_ITEM
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function ontrackvoip_permission() {
  return array(
    'administer ontrackvoip configuration' => array(
      'title' => 'administer ontrackvoip configuration',
    ),
  );
}

function ontrackvoip_admin_menu_block_page() {
  drupal_goto('admin/config/ontrackvoip/ontrackvoip');
}

function ontrackvoip_admin_settings_form($form, &$form_state) {
  //Get default language
  global $language;

  $form['wrapper']['description'] = array(
    '#type' => 'markup',
    '#markup' => '<div><b>Phone number: </b><span>Phone number must be formatted
     with a \'+\' and country code, e.g. +16175551212
    (<a target="_blank" href="http://en.wikipedia.org/wiki/E.164">E.164</a>)
    </span></div>
    <div><b>Phone Number Language: </b><span>This is the default language to be
    used when there is no site context, like in error messages. Otherwise, the site
    language will overwrite this value.</span></div>
     <div><b>Site ID: </b><span>The site(s) associated with the phone number. You might choose one or more depending on the case.</span></div>',
  );
  //Load existing Ontrack sites
  $ontrack_phones = OnTrackPhone::loadAll();

  // Because we have many fields with the same values, we have to set
  // #tree to be able to access them.
  $form['#tree'] = TRUE;

  // Build the fieldset with the proper number of textfields.
  // $form_state['ontrackvoip_ahah_rows_count'] to determine the number of rows to build.
  if (empty($form_state['ontrackvoip_ahah_rows_count'])) {
    $num_of_phones = count($ontrack_phones);
    $form_state['ontrackvoip_ahah_rows_count'] = ($num_of_phones > 3) ? $num_of_phones : 3;
  }

  //Build language list from Locale enabled languages
  $languages = language_list();
  foreach($languages as $langcode => $locale_language) {
    $language_list[$langcode] = $locale_language->name;
  }

  //Build site list from ontrack_get_site_list
  $sites = ontrack_get_site_list();
  //$site_list[''] = '<none>';
  foreach($sites as $site_id => $site) {
    $site_list[$site_id] = $site['title']." (Site ID:$site_id)";
  }

  //Sort alphabetically
  natsort($site_list);
  //Build form table
  for ($i = 0; $i < $form_state['ontrackvoip_ahah_rows_count']; $i++) {
    if($i == 0) {
      $prefix = '<table>';
    }
    else {
      $prefix = '';
    }

    $ontrack_phone = (isset($ontrack_phones[$i])) ? $ontrack_phones[$i] : NULL;

    if (($i+1) == $form_state['ontrackvoip_ahah_rows_count']) {
      $suffix = '</table>';
    }
    else {
      $suffix = '';
    }
    $form['wrapper']['field']['field_'.$i]['phone'] = array(
      '#prefix' => $prefix.'<tr><td>',
      '#title' => t('Phone number'),
      '#type' => 'textfield',
      '#default_value' => (isset($ontrack_phone)) ? $ontrack_phone->getPhoneNumber() : '',
      '#suffix' => '</td>',
    );

    $form['wrapper']['field']['field_'.$i]['site_id'] = array(
      '#prefix' => '<td>',
      '#title' => t('Site ID'),
      '#type' => 'select',
      '#size' => 5,
      '#multiple' => TRUE,
      '#options' => $site_list,
      '#default_value' => (isset($ontrack_phone)) ? $ontrack_phone->getSiteIds() : '',
      '#suffix' => '</td>',
    );

    $form['wrapper']['field']['field_'.$i]['language'] = array(
      '#prefix' => '<td>',
      '#title' => t('Phone Number Language'),
      '#type' => 'select',
      '#options' => $language_list,
      '#default_value' => (isset($ontrack_phone)) ? $ontrack_phone->getLanguage() : $language->language,
      '#suffix' => '</td>',
    );

    $form['wrapper']['field']['field_'.$i]['syntax'] = array(
      '#prefix' => '<td>',
      '#title' => t('SMS Syntax'),
      '#type' => 'select',
      '#options' => array('embedded' => t('use embedded site id in SMS ticket creation requests'),
      'retrieve' => t('retrieve site id based on the site telephone number')),
      '#default_value' => (isset($ontrack_phone)) ? $ontrack_phone->getSyntax() : '',
      '#suffix' => $suffix.'</td></tr>',
    );
  }

  $form['wrapper']['field']['#prefix'] = '<div id="table-page-fieldset-wrapper">';
  $form['wrapper']['field']['#suffix'] = '</div>';

  $form['wrapper']['ontrackvoip_ahah_anon_page'] = array(
    '#type' => 'submit',
    '#value' => t('Add More'),
    '#submit' => array('ontrackvoip_ahah_add_more_anon'),
    '#ajax' => array(
      'callback' => 'ontrackvoip_ahah_add_more_anon_callback',
      'wrapper' => 'table-page-fieldset-wrapper',
    ),
  );

  $form['buttons']['submit'] = array(
    '#prefix' => '<br>',
    '#type' => 'submit',
    '#value' => t('Save'),
  );

  $form['buttons']['cleanup'] = array(
    '#type' => 'submit',
    '#value' => t('Cleanup'),
  );

  return $form;
}


function ontrackvoip_admin_settings_form_validate($form, &$form_state) {
  switch($form_state['clicked_button']['#id']) {
    case 'edit-buttons-submit':
      //Validate only if user pressed Save button
      _ontrackvoip_admin_settings_validate($form_state);
      break;
  }
}

function _ontrackvoip_admin_settings_validate(&$form_state) {
  $phone_numbers = array();
  $rows = $form_state['values']['wrapper']['field'];
  $i=0;
  foreach($rows as $id => $row) {
    if(($row['phone'] && empty($row['site_id'])) || (!$row['phone'] && !empty($row['site_id']))) {
      //If phone is entered without site id or viceversa throw error
      form_set_error('wrapper][field][field_'.$i, t('You must enter both phone number and site id.'));
    }

    //Build array of phone numbers to check if one is repeated more than once
    if($row['phone']) {
      if(isset($phone_numbers[$row['phone']])) {
        form_set_error('wrapper][field]['.$id.'][phone', t('Phone number must be unique.'));
      }
      $phone_numbers[$row['phone']] = TRUE;
    }

    //Retrieve syntax can only be used if site id is one.
    if($row['syntax'] == 'retrieve' && (count($row['site_id']) > 1)) {
        //We can't have retrieve SMS syntax for phone numbers used in multiple site ids
        form_set_error('wrapper][field]['.$id.'][syntax', t('Retrieve SMS syntax can\'t be used when phone number is used with multiple site ids.'));
    }
    $i++;
  }
}

function ontrackvoip_admin_settings_form_submit($form, &$form_state) {
  switch($form_state['clicked_button']['#id']) {
    case 'edit-buttons-submit':
      //Save button pressed
      _ontrackvoip_admin_settings_submit($form_state['values']);
      break;
    case 'edit-buttons-cleanup':
      //Cleanup button pressed
      _ontrackvoip_admin_settings_cleanup();
      break;
  }
}

function _ontrackvoip_admin_settings_submit($values) {
  //delete all ontrack site data
  OnTrackPhone::deleteAll();
  $rows = $values['wrapper']['field'];
  foreach($rows as $row) {
    if($row['phone']) {
      $phone = VoipCall::NormalizeNumber($row['phone']);
      $ontrack_phone = new OnTrackPhone($phone, $row['site_id'], $row['language'], $row['syntax']);
      $ontrack_phone->save();
    }
  }
  drupal_set_message('OnTrack sites saved sucessfully');
}

function _ontrackvoip_admin_settings_cleanup() {
  OnTrackPhone::deleteAll();
  drupal_set_message(t('OnTrack VoIP configuration form is reset.'));
}

function ontrackvoip_is_ticket_manager($account) {
  $roles = user_roles(TRUE);
  $rid = array_search('Ticket Manager', $roles);
  if (isset($account->roles[$rid])) {
    return TRUE;
  }
  return FALSE;
}

function ontrackvoip_log($message) {
  watchdog('ontrackvoip', $message);
}

